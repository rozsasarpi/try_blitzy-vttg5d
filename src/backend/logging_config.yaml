# Electricity Market Price Forecasting System - Logging Configuration
# This configuration defines the logging behavior for all system components
# It supports structured logging, error handling, and monitoring requirements

version: 1
disable_existing_loggers: false

formatters:
  standard:
    format: "%(asctime)s - %(levelname)s - %(name)s - %(message)s"
    datefmt: "%Y-%m-%d %H:%M:%S"
  
  detailed:
    format: "%(asctime)s - %(levelname)s - %(name)s - %(filename)s:%(lineno)d - %(message)s"
    datefmt: "%Y-%m-%d %H:%M:%S"
  
  json:
    format: "%(asctime)s %(levelname)s %(name)s %(message)s %(pathname)s %(lineno)d %(funcName)s %(process)d %(thread)d"
    datefmt: "%Y-%m-%d %H:%M:%S"
    class: pythonjsonlogger.jsonlogger.JsonFormatter

handlers:
  console:
    class: logging.StreamHandler
    level: INFO
    formatter: standard
    stream: ext://sys.stdout
  
  file:
    class: logging.handlers.RotatingFileHandler
    level: INFO
    formatter: detailed
    filename: logs/forecast_system.log
    maxBytes: 10485760  # 10MB
    backupCount: 10
    encoding: utf8
  
  error_file:
    class: logging.handlers.RotatingFileHandler
    level: ERROR
    formatter: detailed
    filename: logs/error.log
    maxBytes: 10485760  # 10MB
    backupCount: 10
    encoding: utf8
  
  pipeline_file:
    class: logging.handlers.RotatingFileHandler
    level: INFO
    formatter: detailed
    filename: logs/pipeline.log
    maxBytes: 10485760  # 10MB
    backupCount: 10
    encoding: utf8
  
  data_ingestion_file:
    class: logging.handlers.RotatingFileHandler
    level: INFO
    formatter: detailed
    filename: logs/data_ingestion.log
    maxBytes: 10485760  # 10MB
    backupCount: 10
    encoding: utf8
  
  feature_engineering_file:
    class: logging.handlers.RotatingFileHandler
    level: INFO
    formatter: detailed
    filename: logs/feature_engineering.log
    maxBytes: 10485760  # 10MB
    backupCount: 10
    encoding: utf8
  
  forecasting_engine_file:
    class: logging.handlers.RotatingFileHandler
    level: INFO
    formatter: detailed
    filename: logs/forecasting_engine.log
    maxBytes: 10485760  # 10MB
    backupCount: 10
    encoding: utf8
  
  forecast_validation_file:
    class: logging.handlers.RotatingFileHandler
    level: INFO
    formatter: detailed
    filename: logs/forecast_validation.log
    maxBytes: 10485760  # 10MB
    backupCount: 10
    encoding: utf8
  
  storage_file:
    class: logging.handlers.RotatingFileHandler
    level: INFO
    formatter: detailed
    filename: logs/storage.log
    maxBytes: 10485760  # 10MB
    backupCount: 10
    encoding: utf8
  
  fallback_file:
    class: logging.handlers.RotatingFileHandler
    level: INFO
    formatter: detailed
    filename: logs/fallback.log
    maxBytes: 10485760  # 10MB
    backupCount: 10
    encoding: utf8
  
  scheduler_file:
    class: logging.handlers.RotatingFileHandler
    level: INFO
    formatter: detailed
    filename: logs/scheduler.log
    maxBytes: 10485760  # 10MB
    backupCount: 10
    encoding: utf8
  
  api_file:
    class: logging.handlers.RotatingFileHandler
    level: INFO
    formatter: detailed
    filename: logs/api.log
    maxBytes: 10485760  # 10MB
    backupCount: 10
    encoding: utf8

loggers:
  root:
    level: INFO
    handlers: [console, file, error_file]
    propagate: false
  
  src.backend.pipeline:
    level: INFO
    handlers: [console, pipeline_file, error_file]
    propagate: false
  
  src.backend.data_ingestion:
    level: INFO
    handlers: [console, data_ingestion_file, error_file]
    propagate: false
  
  src.backend.feature_engineering:
    level: INFO
    handlers: [console, feature_engineering_file, error_file]
    propagate: false
  
  src.backend.forecasting_engine:
    level: INFO
    handlers: [console, forecasting_engine_file, error_file]
    propagate: false
  
  src.backend.forecast_validation:
    level: INFO
    handlers: [console, forecast_validation_file, error_file]
    propagate: false
  
  src.backend.storage:
    level: INFO
    handlers: [console, storage_file, error_file]
    propagate: false
  
  src.backend.fallback:
    level: INFO
    handlers: [console, fallback_file, error_file]
    propagate: false
  
  src.backend.scheduler:
    level: INFO
    handlers: [console, scheduler_file, error_file]
    propagate: false
  
  src.backend.api:
    level: INFO
    handlers: [console, api_file, error_file]
    propagate: false

root:
  level: INFO
  handlers: [console, file, error_file]
  propagate: false